// Generated by view binder compiler. Do not edit!
package com.whiteguru.capacitor.plugin.mediacapture.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.camera.view.PreviewView;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.whiteguru.capacitor.plugin.mediacapture.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCaptureBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageButton cameraButton;

  @NonNull
  public final ImageButton captureButton;

  @NonNull
  public final ConstraintLayout container;

  @NonNull
  public final PreviewView previewView;

  @NonNull
  public final ImageButton stopButton;

  @NonNull
  public final TextView timeLeft;

  private FragmentCaptureBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageButton cameraButton, @NonNull ImageButton captureButton,
      @NonNull ConstraintLayout container, @NonNull PreviewView previewView,
      @NonNull ImageButton stopButton, @NonNull TextView timeLeft) {
    this.rootView = rootView;
    this.cameraButton = cameraButton;
    this.captureButton = captureButton;
    this.container = container;
    this.previewView = previewView;
    this.stopButton = stopButton;
    this.timeLeft = timeLeft;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCaptureBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCaptureBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_capture, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCaptureBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.camera_button;
      ImageButton cameraButton = ViewBindings.findChildViewById(rootView, id);
      if (cameraButton == null) {
        break missingId;
      }

      id = R.id.capture_button;
      ImageButton captureButton = ViewBindings.findChildViewById(rootView, id);
      if (captureButton == null) {
        break missingId;
      }

      ConstraintLayout container = (ConstraintLayout) rootView;

      id = R.id.previewView;
      PreviewView previewView = ViewBindings.findChildViewById(rootView, id);
      if (previewView == null) {
        break missingId;
      }

      id = R.id.stop_button;
      ImageButton stopButton = ViewBindings.findChildViewById(rootView, id);
      if (stopButton == null) {
        break missingId;
      }

      id = R.id.time_left;
      TextView timeLeft = ViewBindings.findChildViewById(rootView, id);
      if (timeLeft == null) {
        break missingId;
      }

      return new FragmentCaptureBinding((ConstraintLayout) rootView, cameraButton, captureButton,
          container, previewView, stopButton, timeLeft);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
